from pymongo import MongoClient
from pymongo.errors import DuplicateKeyError
from vkbottle.bot import Bot, Message, rules
import random
from datetime import datetime, timedelta
import time

bot = Bot(token="81bea9a533ee468fd9ec03365deaf39c53370802d7fc4cac960d8f75bef4fbc5dbdc65d82a0b49daed084")

db_client = MongoClient("mongodb+srv://Oshava:9JLPx0KWRIb0dFdR@oshava.clqqsh4.mongodb.net/?retryWrites=true&w=majority")

current_db = db_client["ServoSkullBot"]

collection = current_db["users_vk_v2"]

cruiser = current_db["cruiser"]

weapon_db = {"Lasgun": {"Strength": 100, "Price": 30}}

weapon_cs = {"Bayonet_knife": {"Strength": 200, "Price": 30}}

current_planet = {
    1: {"name": "–ú–∏—Ä –£–ª–µ–π", "description": "–ù–µ–±–æ–ª—å—à–æ–π –±–æ–Ω—É—Å –≤ –≤–∏–¥–µ —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–≥–æ –æ–ø—ã—Ç–∞"},
    2: {"name": "–î–∏–∫–∏–π –ú–∏—Ä", "description": "–ù–µ–±–æ–ª—å—à–æ–π –±–æ–Ω—É—Å –≤ –≤–∏–¥–µ —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–π —Å–∏–ª—ã"},
    3: {"name": "–ú–∏—Ä –ö—É–∑–Ω—è", "description": "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"},
    4: {"name": "–ê–≥—Ä–æ–º–∏—Ä", "description": "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ"}
}

roles_imperium_ig = {
    "–ü—Ä–∏–∑—ã–≤–Ω–∏–∫": {"Strength": 100, "Price": 50, "limit": 0},
    "–†—è–¥–æ–≤–æ–π": {"Strength": 50, "Price": 100, "limit": 0},
    "–ú–ª–∞–¥—à–∏–π –∫–∞–ø—Ä–∞–ª": {"Strength": 20, "Price": 200, "limit": 0},
    "–ö–∞–ø—Ä–∞–ª": {"Strength": 30, "Price": 300, "limit": 0},
    "–°–µ—Ä–∂–∞–Ω—Ç": {"Strength": 40, "Price": 400, "limit": 2},
    "–°—Ç–∞—Ä—à–∏–π —Å–µ—Ä–∂–∞–Ω—Ç": {"Strength": 80, "Price": 800}, "limit": 2,
    "–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç": {"Strength": 150, "Price": 1500, "limit": 3},
    "–ö–∞–ø–∏—Ç–∞–Ω": {"Strength": 170, "Price": 1700, "limit": 3},
    "–ú–∞–π–æ—Ä": {"Strength": 200, "Price": 2000, "limit": 4},
    "–ü–æ–¥–ø–æ–ª–∫–æ–≤–Ω–∏–∫": {"Strength": 220, "Price": 2200, "limit": 4},
    "–ü–æ–ª–∫–æ–≤–Ω–∏–∫": {"Strength": 300, "Price": 3000, "limit": 4},
    "–ì–µ–Ω–µ—Ä–∞–ª –º–∞–π–æ—Ä": {"Strength": 350, "Price": 3500, "limit": 5},
    "–ì–µ–Ω–µ—Ä–∞–ª –ª–µ–π—Ç–µ–Ω–∞–Ω—Ç": {"Strength": 400, "Price": 4000, "limit": 5},
    "–ì–µ–Ω–µ—Ä–∞–ª": {"Strength": 450, "Price": 4500, "limit": 10},
    "–õ–æ—Ä–¥ –≥–µ–Ω–µ—Ä–∞–ª": {"Strength": 500, "Price": 5000, "limit": 10},
    "–õ–æ—Ä–¥ –º–∞—Ä—à–∞–ª": {"Strength": 600, "Price": 6000, "limit": 10},
    "–õ–æ—Ä–¥ –≥–µ–Ω–µ—Ä–∞–ª –º–∏–ª–∏—Ç–∞–Ω—Ç": {"Strength": 800, "Price": 8000, "limit": 10},
    "–õ–æ—Ä–¥ –ö–æ–º–∞–Ω–¥–æ—Ä –ú–∏–ª–∏—Ç–∞–Ω—Ç –ò–º–ø–µ—Ä—Å–∫–æ–π –ì–≤–∞—Ä–¥–∏–∏": {"Strength": 1000, "Price": 10000, "limit": 30}}

roles_imperium_sm = {
    "–ö–∞–Ω–¥–∏–¥–∞—Ç": {"Strength": 5, "Price": 50, "limit": 0},
    "–ù–µ–æ—Ñ–∏—Ç": {"Strength": 5, "Price": 50, "limit": 0},
    "–°–∫–∞—É—Ç": {"Strength": 5, "Price": 500, "limit": 2},
    "–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å": {"Strength": 300, "Price": 1000, "limit": 3},
    "–®—Ç—É—Ä–º–æ–≤–∏–∫": {"Strength": 600, "Price": 1000, "limit": 3},
    "–¢–∞–∫—Ç–∏–∫–∞–ª": {"Strength": 900, "Price": 3000, "limit": 3},
    "–°–µ—Ä–∂–∞–Ω—Ç": {"Strength": 900, "Price": 5000, "limit": 5},
    "–õ–µ–π—Ç–µ–Ω–∞–Ω—Ç": {"Strength": 900, "Price": 10000, "limit": 10},
    "–ö–∞–ø–∏—Ç–∞–Ω": {"Strength": 900, "Price": 15000, "limit": 20},
    "–ú–∞–≥–∏—Å—Ç—Ä": {"Strength": 900, "Price": 20000, "limit": 30}}

arena_roles = {
    1: {"name": "–ù–æ–≤–∏—á–æ–∫", "Strength": 7},
    2: {"name": "–ù–∞—á–∏–Ω–∞—é—â–∏–π", "Strength": 10},
    3: {"name": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π", "Strength": 14},
    4: {"name": "–£–∑–Ω–∞–≤–∞–µ–º—ã–π", "Strength": 17},
    5: {"name": "–ò–∑–≤–µ—Å—Ç–Ω—ã–π", "Strength": 21},
    6: {"name": "–ó–Ω–∞–º–µ–Ω–∏—Ç—ã–π", "Strength": 25},
    7: {"name": "–í—ã–¥–∞—é—â–∏–π—Å—è", "Strength": 30},
    8: {"name": "–ü—Ä–æ—Å–ª–∞–≤–ª–µ–Ω–Ω—ã–π", "Strength": 35},
    9: {"name": "–í–µ—Ç–µ—Ä–∞–Ω", "Strength": 40},
    10: {"name": "–ß–µ–º–ø–∏–æ–Ω", "Strength": 50}}

enemy_list = {1: {"Name": "planet1", "Strength": 500},
              2: {"Name": "planet2", "Strength": 1000},
              3: {"Name": "planet3", "Strength": 2000},
              4: {"Name": "planet4", "Strength": 4000},
              5: {"Name": "planet5", "Strength": 5000},
              6: {"Name": "planet6", "Strength": 6000},
              7: {"Name": "planet7", "Strength": 7000}}


def next_rank(key, dict: dict) -> str:
    a = 1
    for i in range(len(dict)):
        dict_to_list = list(dict.keys())
        b = dict_to_list[i]
        a = a + 1
        if b == key:
            return dict_to_list[i + 1]


def reg(id, nick):
    try:
        collection.insert_one(
            {"_id": id,
             "Nickname": nick,
             "Essence": "Soul",
             "Experience": 0,
             "Strength": 2,
             "Rating": 0,
             "Planet": "Unknown",
             "Structure": "Unknown",
             "Dates": {'Date_of_Birth': {"time": datetime.utcnow(), "name": "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"}},
             "Weapon": {"weapon_cs": None, "weapon_db": None},
             "Equipment": {"Protection": None}})
        return f"[id{id}|{nick}], —Å–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–µ—Ç–∞ –≤–µ—Ä—Å–∏—é –±–æ—Ç–∞‚úî\n –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ö–∞–∫ –∏–≥—Ä–∞—Ç—å."
    except DuplicateKeyError:
        return f"[id{id}|{nick}], –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã‚ùå"


def status(id: int):
    user_in_mongo = collection.find_one({"_id": id})
    return (f"‚úîNickname = [id{id}|{user_in_mongo['Nickname']}]\n "
            f"‚öîClassis = {user_in_mongo['Essence']}\n "
            f"üõ°Structure = {user_in_mongo['Structure']}\n "
            f"ü™êPlanet = {user_in_mongo['Planet']}\n "
            f"üí™Strength = {user_in_mongo['Strength']}\n "
            f"üõ†Experience = {user_in_mongo['Experience']}\n"
            f"‚≠êRating = {user_in_mongo['Rating']}\n")


def convert_to_preferred_format(sec):
    ty_res = time.gmtime(sec)
    res = time.strftime("%H:%M:%S", ty_res)
    return res


@bot.on.chat_message(text=["reg", "Reg"])
async def reg_handler(message: Message):
    user_name = await bot.api.users.get(message.from_id)
    await message.answer(message=f"{reg(message.from_id, user_name[0].first_name)}")


@bot.on.chat_message(text=["–ü–ª–∞–Ω–µ—Ç—ã", "–ø–ª–∞–Ω–µ—Ç—ã"])
async def planet_handler(message: Message):
    count = 1
    current_variant = ""
    for i in range(len(current_planet)):
        current_variant = current_variant + f"\n{count}) {current_planet[count]['name']} - {current_planet[count]['description']}"
        count = count + 1
    await message.answer(message="üåç–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞–Ω–µ—Ç—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:" + current_variant)


@bot.on.chat_message(text=["–°—Ç–∞—Ç—É—Å", "—Å—Ç–∞—Ç—É—Å"])
async def status_handler(message: Message):
    try:
        await message.answer(status(message.from_id))
    except:
        await message.answer(f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π reg‚ùå")


@bot.on.chat_message(text=[("–°—Ç–∞—Ç—É—Å <msg>"), ("—Å—Ç–∞—Ç—É—Å <msg>")])
async def status_handler(message: Message, msg):
    if "[id" in msg:
        id = int(msg.split("|")[0].replace("[id", ""))
        try:
            await message.answer(status(id))
        except:
            await message.answer(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
    else:
        await message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")


@bot.on.chat_message(text=["–ö—É–ª–¥–∞—É–Ω", "–∫—É–ª–¥–∞—É–Ω"])
async def planet_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})["Dates"]
    for i in range(len(user_in_mongo)):
        name_dates = list(user_in_mongo)[i]
        a = (datetime.utcnow()-user_in_mongo[name_dates]['time']).total_seconds()
        await message.answer(f"{user_in_mongo[name_dates]['name']} - –ø—Ä–æ—à–ª–æ {convert_to_preferred_format((datetime.utcnow()-user_in_mongo[name_dates]['time']).total_seconds())}")


@bot.on.chat_message(text=["–ü–ª–∞–Ω–µ—Ç—ã", "–ø–ª–∞–Ω–µ—Ç—ã"])
async def planet_handler(message: Message):
    count = 1
    current_variant = ""
    for i in range(len(current_planet)):
        current_variant = current_variant + f"\n{count}) {current_planet[count]['name']} - {current_planet[count]['description']}"
        count = count + 1
    await message.answer(message="–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–ª–∞–Ω–µ—Ç—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:" + current_variant)


@bot.on.chat_message(text=(["–†–æ–∂–¥–µ–Ω–∏–µ <msg>", "—Ä–æ–∂–¥–µ–Ω–∏–µ <msg>"]))
async def born_handler(message: Message, msg):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    planet = int(msg)
    if planet in current_planet:
        if user_in_mongo["Planet"] == "Unknown":
            if random.choices([1, 0], weights=[60, 40], k=1)[0] == 1:
                if planet == 1:
                    collection.update_one({'_id': message.from_id},
                                          {'$set': {'Essence': "Citizen",
                                                    "Structure": "–ò–º–ø–µ—Ä—Å–∫–∏–π –º–∏—Ä",
                                                    "Planet": current_planet[planet]['name'],
                                                    "Dates.Date_citizen_work.time": datetime.utcnow() - timedelta(
                                                        minutes=5),
                                                    "Dates.Date_citizen_work.name": "–†–∞–±–æ—Ç–∞",
                                                    "Dates.Date_fight.time": datetime.utcnow() - timedelta(
                                                        minutes=10),
                                                    "Dates.Date_fight.name": "–°–ø—É—Å—Ç–∏—Ç—å—Å—è"},
                                           '$inc': {'Experience': 20}
                                           })
                    await message.answer(message=f"‚úî[id{message.from_id}|{user_in_mongo['Nickname']}],"
                                                 f"—Ç–≤–æ–π –ø—É—Ç—å –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã —Ä–æ–¥–∏–ª—Å—è –≤ –∂–∏–ª–æ–º —É—Ä–æ–≤–Ω–µ –ú–∏—Ä–∞-–£–ª—å—è."
                                                 f"–í–µ–ª–∏–∫–∏–µ —É–ª—å–∏ –Ω–µ –ø–æ—Ö–æ–∂–∏ –Ω–∞ –ø—Ä–æ—á–∏–µ –º–∏—Ä—ã –ò–º–ø–µ—Ä–∏—É–º–∞, "
                                                 f"–∞ —Ç—ã ‚Äì –Ω–∞ –∂–∏—Ç–µ–ª–µ–π  —Ç–µ—Ö –º–∏—Ä–æ–≤. –¢—ã  —Å –¥–µ—Ç—Å—Ç–≤–∞ –ø–æ–∑–Ω–∞–µ—à—å, —á—Ç–æ —Ç–∞–∫–æ–µ —Ç—è–∂–µ–ª–∞—è —Ä–∞–±–æ—Ç–∞ –≤ —Ñ–∞–±—Ä–∏–∫–∞—Ö –∏–º–ø–µ—Ä–∏—É–º–∞,"
                                                 f" –ø—Ä–æ–∏–∑–≤–æ–¥—è –∞–º–º—É–Ω–∏—Ü–∏—é –∏ –≤—ã–ø–æ–ª–Ω—è—è –Ω–æ—Ä–º—É.",
                                         attachment=random.choice(
                                             ["photo-212919678_457239027", "photo-212919678_457239026"]))
                elif planet == 2:
                    collection.update_one({'_id': message.from_id},
                                          {'$set': {'Essence': "Savage",
                                                    "Structure": "–ò–º–ø–µ—Ä—Å–∫–∏–π –º–∏—Ä",
                                                    "Planet": current_planet[planet]['name'],
                                                    "Dates.Date_citizen_work.time": datetime.utcnow() - timedelta(
                                                        minutes=5),
                                                    "Dates.Date_citizen_work.name": "–û—Ö–æ—Ç–∞",
                                                    "Dates.Date_fight.time": datetime.utcnow() - timedelta(
                                                        minutes=10),
                                                    "Dates.Date_fight.name": "–ê—Ä–µ–Ω–∞"},
                                           '$inc': {'Strength': 2}
                                           })
                    await message.answer(message=f"‚úî[id{message.from_id}|{user_in_mongo['Nickname']}], –±–æ–ª—å—à–∞—è —á–∞—Å—Ç—å —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏ –ø—Ä–æ—à–ª–∞ —Å—Ä–µ–¥–∏ —Ç–≤–æ–µ–≥–æ –ø–ª–µ–º–µ–Ω–∏ –Ω–∞ –∂–µ—Å—Ç–æ–∫–æ–º –¥–∏–∫–æ–º –º–∏—Ä–µ, "
                                                 f"–≥–¥–µ —Å–∏–ª–∞, –æ—Ç–≤–∞–≥–∞ –∏ –±–æ–µ–≤–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ —Ü–µ–Ω–∏—Ç—Å—è –ø—Ä–µ–≤—ã—à–µ –≤—Å–µ–≥–æ. "
                                                 f"–¢—ã –±–æ–ª—å—à–æ–π, —Å–∏–ª—å–Ω—ã–π –∏ —Ö—Ä–∞–±—Ä—ã–π,  –Ω–æ  –ø—Ä–∏  —ç—Ç–æ–º  –µ—â–µ  –∏  —Å—É–µ–≤–µ—Ä–Ω—ã–π.  "
                                                 f"–¢—ã  –ø–æ—á—Ç–∏  –Ω–∞–≤–µ—Ä–Ω—è–∫–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—à—å  –∫  –≤–æ–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º—É  –∫–ª–∞–Ω—É,  –∏  —Ü–µ–Ω—è—Ç  —Ç–µ–±—è  –∑–∞ —Ç–≤–æ–∏ –±–æ–µ–≤—ã–µ —É–º–µ–Ω–∏—è",
                                         attachment=random.choice(
                                             ["photo-212919678_457239033", "photo-212919678_457239032"]))
                else:
                    await message.answer(message="–î–∞–Ω–Ω–æ–π –ø–ª–∞–Ω–µ—Ç—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏–±–æ –µ—â–µ –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–∞")
            else:
                await message.answer(
                    message="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –ø–æ–≥–∏–±–ª–∏ –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏‚ùå. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É —Å–Ω–æ–≤–∞",
                    attachment="photo-212919678_457239022")
        else:
            await message.answer(message="–í—ã —É–∂–µ —Ä–æ–∂–¥–µ–Ω—ã")
    else:
        await message.answer(message="–î–∞–Ω–Ω–æ–π –ø–ª–∞–Ω–µ—Ç—ã –ª–∏–±–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ª–∏–±–æ –µ—â–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞")


@bot.on.chat_message(text=["–†–∞–±–æ—Ç–∞—Ç—å", "—Ä–∞–±–æ—Ç–∞—Ç—å"])
async def work_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –≤—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Planet"] == "–ú–∏—Ä –£–ª–µ–π":
        a = user_in_mongo['Dates']['Date_citizen_work']["time"]
        b = datetime.utcnow()
        c = b - a
        if c.total_seconds() > 300:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –Ω–∞ —Ä–∞–±–æ—Ç—É –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–≤–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏")
            if random.choices(["win", "defeat"], weights=[70, 30], k=1)[0] == "win":
                collection.update_one({'_id': message.from_id},
                                      {'$set': {'Dates.Date_citizen_work.time': datetime.utcnow()},
                                       '$inc': {'Experience': 10, "Strength": 2}})
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], —Å–µ–≥–æ–¥–Ω—è –Ω–∞ —Ä–∞–±–æ—Ç–µ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –Ω–∏—á–µ–≥–æ –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ.\n"
                            "–û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ 10 –ø—É–Ω–∫—Ç–æ–≤, —Å–∏–ª–∞ –Ω–∞ 2")
            else:
                aboba = random.choices([1, 2, 3])
                if aboba == 1:
                    collection.update_one({'_id': message.from_id},
                                          {'$set': {'Dates.Date_citizen_work.time': datetime.utcnow()},
                                           '$inc': {'Experience': 5, "Strength": 1}})
                    await message.answer(
                        message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –∏–∑-–∑–∞ –ø–æ–ª–æ–º–∫–∏ –≤—ã –Ω–µ —É—Å–ø–µ–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–æ—Ä–º—É. –û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ 5, –∞ —Å–∏–ª–∞ –Ω–∞ 1")
                elif aboba == 2:
                    collection.update_one({'_id': message.from_id},
                                          {'$set': {'Dates.Date_citizen_work.time': datetime.utcnow()}})
                    await message.answer(
                        message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –≤–∞—Å –Ω–∞–ø–∞–ª–∏ –±–∞–Ω–¥–∏—Ç—ã. –í—ã —É—Å–ø–µ–ª–∏ —Å–±–µ–∂–∞—Ç—å")
                elif aboba == 3:
                    collection.update_one({'_id': message.from_id},
                                          {'$set': {'Dates.Date_citizen_work.time': datetime.utcnow()},
                                           '$inc': {'Experience': 20, "Strength": 4}})
                    await message.answer(
                        message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –ø–µ—Ä–µ–≤—ã–ø–æ–ª–Ω–∏–ª–∏ –Ω–æ—Ä–º—É, –≤–∞—à –æ–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ 20, —Å–∏–ª–∞ –Ω–∞ 4")
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –æ—Ç–¥–æ—Ö–Ω–∏—Ç–µ. –ö–¥ —Ä–∞–±–æ—Ç—ã 5 –º–∏–Ω—É—Ç")


@bot.on.chat_message(text=["–°–ø—É—Å—Ç–∏—Ç—å—Å—è", "—Å–ø—É—Å—Ç–∏—Ç—å—Å—è"])
async def info_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "–ú–∏—Ä –£–ª–µ–π":
        await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –≤—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ —Å–ø—É—Å—Ç–∏—Ç—å—Å—è –∏ –Ω–∞–ø–∏—à–∏—Ç–µ: \n–°–ø—É—Å—Ç–∏—Ç—å—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ_–º–µ—Å—Ç–∞ (–ü—Ä–∏–º–µ—Ä –°–ø—É—Å—Ç–∏—Ç—å—Å—è –î—Ä–µ–≤–Ω–∏–µ —Ñ–∞–±—Ä–∏–∫–∏)\n1)–î—Ä–µ–≤–Ω–∏–µ —Ñ–∞–±—Ä–∏–∫–∏\n2)–ü–æ–¥—É–ª—å–µ\n3)–î–Ω–æ —É–ª—å—è")


@bot.on.chat_message(text=["–°–ø—É—Å—Ç–∏—Ç—å—Å—è <msg>", "—Å–ø—É—Å—Ç–∏—Ç—å—Å—è <msg>"])
async def work_handler(message: Message, msg):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –≤—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Planet"] == "–ú–∏—Ä –£–ª–µ–π":
        a = user_in_mongo['Dates']['Date_fight']["time"]
        b = datetime.utcnow()
        c = b - a
        if c.total_seconds() > 600:
            if msg == "–î—Ä–µ–≤–Ω–∏–µ —Ñ–∞–±—Ä–∏–∫–∏":
                enemy_strength = random.uniform(1, 6)
                await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —Å–ø—É—Å—Ç–∏–ª–∏—Å—å –≤ –î—Ä–µ–≤–Ω–∏–µ —Ñ–∞–±—Ä–∏–∫–∏")
                await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í–∞–º –Ω–∞ –ø—É—Ç–∏ –ø–æ–ø–∞–ª–∞—Å—å —Ä–µ–¥–∫–∞—è —Ç–≤–∞—Ä—å —Å —Å–∏–ª–æ–π: {enemy_strength}")
                aboba = random.choices(["win_self", "win_opp"],
                                       weights=[user_in_mongo["Strength"], enemy_strength], k=1)[0]
                if aboba == "win_self":
                    rating_current = (1 / (user_in_mongo["Strength"] / (
                                user_in_mongo["Strength"] + enemy_strength))) + 2
                    collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_fight.time": datetime.utcnow()}, "$inc": {"Strength": rating_current}})
                    await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –ø–æ–±–µ–¥–∏–ª–∏! –û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ {rating_current}")
                else:
                    collection.update_one({'_id': message.from_id},
                                          {'$set': {'Dates.Date_fight.time': datetime.utcnow()}})
                    await message.answer(
                        message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –∏ –æ—Ç—Å—Ç—É–ø–∞–µ—Ç–µ")
            elif msg == "–ü–æ–¥—É–ª—å–µ":
                enemy_strength = random.uniform(20, 40)
                await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —Å–ø—É—Å—Ç–∏–ª–∏—Å—å –≤ –ü–æ–¥—É–ª—å–µ")
                await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í–∞–º –Ω–∞ –ø—É—Ç–∏ –ø–æ–ø–∞–ª–∞—Å—å —Ä–µ–¥–∫–∞—è —Ç–≤–∞—Ä—å —Å —Å–∏–ª–æ–π: {enemy_strength}")
                aboba = random.choices(["win_self", "win_opp"],
                                       weights=[user_in_mongo["Strength"], enemy_strength], k=1)[0]
                if aboba == "win_self":
                    rating_current = (1 / (user_in_mongo["Strength"] / (
                                user_in_mongo["Strength"] + enemy_strength))) + 2
                    collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_fight.time": datetime.utcnow()}, "$inc": {"Strength": rating_current}})
                    await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –ø–æ–±–µ–¥–∏–ª–∏! –û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ {rating_current}")
                else:
                    collection.update_one({'_id': message.from_id},
                                          {'$set': {'Dates.Date_fight.time': datetime.utcnow()}})
                    await message.answer(
                        message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –∏ –æ—Ç—Å—Ç—É–ø–∞–µ—Ç–µ")
            elif msg == "–î–Ω–æ —É–ª—å—è":
                enemy_strength = random.uniform(40, 100)
                await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —Å–ø—É—Å—Ç–∏–ª–∏—Å—å –≤ –î–Ω–æ —É–ª—å—è")
                await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í–∞–º –Ω–∞ –ø—É—Ç–∏ –ø–æ–ø–∞–ª–∞—Å—å —Ä–µ–¥–∫–∞—è —Ç–≤–∞—Ä—å —Å —Å–∏–ª–æ–π: {enemy_strength}")
                aboba = random.choices(["win_self", "win_opp"],
                                       weights=[user_in_mongo["Strength"], enemy_strength], k=1)[0]
                if aboba == "win_self":
                    rating_current = (1 / (user_in_mongo["Strength"] / (
                                user_in_mongo["Strength"] + enemy_strength))) + 2
                    collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_fight.time": datetime.utcnow()}, "$inc": {"Strength": rating_current}})
                    await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –ø–æ–±–µ–¥–∏–ª–∏! –û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ {rating_current}")
                else:
                    collection.update_one({'_id': message.from_id},
                                          {'$set': {'Dates.Date_fight.time': datetime.utcnow()}})
                    await message.answer(
                        message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ –∏ –æ—Ç—Å—Ç—É–ø–∞–µ—Ç–µ")
            else:
                await message.answer(message="–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è")
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –æ—Ç–¥–æ—Ö–Ω–∏—Ç–µ. –ö–¥ 10 –º–∏–Ω—É—Ç")


@bot.on.chat_message(text=["–û—Ö–æ—Ç–∞", "–æ—Ö–æ—Ç–∞"])
async def work_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –≤—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Planet"] == "–î–∏–∫–∏–π –ú–∏—Ä":
        a = user_in_mongo['Dates']['Date_citizen_work']["time"]
        b = datetime.utcnow()
        c = b - a
        if c.total_seconds() > 300:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –Ω–∞ –æ—Ö–æ—Ç—É")
            if random.choices(["win", "defeat"], weights=[90, 10], k=1)[0] == "win":
                collection.update_one({'_id': message.from_id},
                                      {'$set': {'Dates.Date_citizen_work.time': datetime.utcnow()},
                                       '$inc': {'Experience': 10, "Strength": 2}})
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –°–µ–≥–æ–¥–Ω—è –Ω–∞ –æ—Ö–æ—Ç–µ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –Ω–∏—á–µ–≥–æ –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ.\n"
                            "–û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ 10 –ø—É–Ω–∫—Ç–æ–≤, —Å–∏–ª–∞ –Ω–∞ 2")
            else:
                collection.update_one({'_id': message.from_id},
                                      {'$set': {'Dates.Date_citizen_work.time': datetime.utcnow()}})
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –û—Ö–æ—Ç–∞ –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ")
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –æ—Ç–¥–æ—Ö–Ω–∏—Ç–µ. –ö–¥ –æ—Ö–æ—Ç—ã 5 –º–∏–Ω—É—Ç")


@bot.on.chat_message(text=["–ê—Ä–µ–Ω–∞", "–∞—Ä–µ–Ω–∞"])
async def info_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "–î–∏–∫–∏–π –ú–∏—Ä":
        current_message = f"[id{message.from_id}|{user_in_mongo['Nickname']}], –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ: \n–ê—Ä–µ–Ω–∞ –Ω–æ–º–µ—Ä (–ü—Ä–∏–º–µ—Ä –ê—Ä–µ–Ω–∞ 2)"
        count = 0
        for i in range(len(arena_roles)):
            count = count + 1
            name_dates = arena_roles[count]
            current_message = current_message + f"\n{count}) {name_dates['name']} - {name_dates['Strength']}"
        await message.answer(current_message)


@bot.on.chat_message(text=["–ê—Ä–µ–Ω–∞ <msg>", "–∞—Ä–µ–Ω–∞ <msg>"])
async def info_handler(message: Message, msg):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    number_opp = int(msg)
    if user_in_mongo["Planet"] == "–î–∏–∫–∏–π –ú–∏—Ä":
        a = user_in_mongo['Dates']['Date_fight']["time"]
        b = datetime.utcnow()
        c = b - a
        if c.total_seconds() > 600:
            if number_opp == 10:
                aboba = random.choices(["win_self", "win_opp"], weights=[user_in_mongo["Strength"], arena_roles[number_opp]["Strength"]], k=1)[0]
                if aboba == "win_self":
                    rating_current = (1 / (user_in_mongo["Strength"] / (user_in_mongo["Strength"] + arena_roles[number_opp]["Strength"]))) + 2
                    collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_fight.time": datetime.utcnow()},
                                                                     "$inc": {"Strength": rating_current}})
                    await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –≤–∞—à–∞ —Å–∏–ª–∞ —É–≤–µ–ª–∏—á–∏–Ω–∞ –Ω–∞ {rating_current}")
                else:
                    collection.update_one({"_id": message.from_id}, {"$set" : {"Dates.Date_fight.time": datetime.utcnow()}})
                    await message.answer("Defeat")
            elif arena_roles[number_opp]["Strength"] < user_in_mongo["Strength"]:
                await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –ø–æ—Å–∏–ª—å–Ω–µ–µ")
            else:
                aboba = random.choices(["win_self", "win_opp"], weights=[user_in_mongo["Strength"], arena_roles[number_opp]["Strength"]], k=1)[0]
                if aboba == "win_self":
                    rating_current = (1 / (user_in_mongo["Strength"] / (user_in_mongo["Strength"] + arena_roles[number_opp]["Strength"]))) + 2
                    collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_fight.time": datetime.utcnow()},
                                                                     "$inc": {"Strength": rating_current}})
                    await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –ø–æ–±–µ–¥–∏–ª–∏ –≤–∞—à–∞ —Å–∏–ª–∞ —É–≤–µ–ª–∏—á–∏–Ω–∞ –Ω–∞ {rating_current}")
                else:
                    collection.update_one({"_id": message.from_id}, {"$set" : {"Dates.Date_fight.time": datetime.utcnow()}})
                    await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–∏–ª—ã –∏ –ø–æ–ø—ã—Ç–∞–π—Ç–µ —É–¥–∞—á—É —Å–Ω–æ–≤–∞")
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –û—Ç–¥–æ—Ö–Ω–∏—Ç–µ. –ö–¥ –∞—Ä–µ–Ω—ã 10 –º–∏–Ω—É—Ç")


@bot.on.chat_message(text=["–í—Å—Ç—É–ø–∏—Ç—å –ò–ì", "–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ò–º–ø–µ—Ä—Å–∫–∞—è –ì–≤–∞—Ä–¥–∏—è", "–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ò–ì", "–≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ò–ì",
                           "–≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –º–º–ø–µ—Ä—Å–∫–∞—è –≥–≤–∞—Ä–¥–∏—è", "–≤—Å—Ç—É–ø–∏—Ç—å –º–º–ø–µ—Ä—Å–∫–∞—è –≥–≤–∞—Ä–¥–∏—è"])
async def roles_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Essence"] in roles_imperium_ig:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –∏–º–ø–µ—Ä—Å–∫–æ–π –≥–≤–∞—Ä–¥–∏–∏")
    elif user_in_mongo["Essence"] in roles_imperium_sm:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ö–æ—Å–º–æ–¥–µ—Å–∞–Ω—Ç–∞")
    elif user_in_mongo["Planet"] in str(current_planet):
        if user_in_mongo["Experience"] >= 50:
            collection.update_one({'_id': message.from_id},
                                  {'$set': {'Essence': "–ü—Ä–∏–∑—ã–≤–Ω–∏–∫",
                                            'Structure': "–ê—Å—Ç—Ä–∞ –ú–∏–ª–∏—Ç–∞—Ä—É–º",
                                            "Dates.Date_ig_Shooting.time": datetime.utcnow() - timedelta(
                                                minutes=1440), "Dates.Date_ig_Shooting.name": "–°—Ç—Ä–µ–ª—å–±–∏—â–µ",
                                            "Dates.Date_ig_Workout.time": datetime.utcnow() - timedelta(
                                                minutes=1440), "Dates.Date_ig_Workout.name": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
                                            "Dates.Date_ig_vaxta.time": datetime.utcnow() - timedelta(
                                                minutes=1440), "Dates.Date_ig_vaxta.name": "–í–∞—Ö—Ç–∞",
                                            "Dates.Date_ig_crusade.time": datetime.utcnow() - timedelta(
                                                minutes=1440), "Dates.Date_ig_crusade.name": "–ü–æ—Ö–æ–¥",
                                            "Weapon.weapon_db": weapon_db["Lasgun"],
                                            "Weapon.weapon_cs": weapon_cs["Bayonet_knife"]},
                                   '$inc': {"Strength": 100,
                                            'Experience': -50},
                                   '$unset': {"Dates.Date_citizen_work": 1,
                                              "Dates.Date_fight": 1}})
            await message.answer(
                message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –≤—Å—Ç—É–ø–∏–ª–∏ –≤ –∏–º–ø–µ—Ä—Å–∫—É—é –≥–≤–∞—Ä–¥–∏—é –í–∞—à–µ –∑–≤–∞–Ω–∏–µ: –ü—Ä–∏–∑—ã–≤–Ω–∏–∫.")
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø—ã—Ç–∞")
    else:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ —Ä–µ–µ—Å—Ç—Ä –±–æ–π—Ü–æ–≤ reg")


@bot.on.chat_message(text=["–ü–æ–ª—É—á–∏—Ç—å –ø–æ–≤—ã—à–µ–Ω–∏–µ", "–ü–æ–≤—ã—à–µ–Ω–∏–µ", "–ø–æ–≤—ã—à–µ–Ω–∏–µ", "–ø–æ–ª—É—á–∏—Ç—å –ø–æ–≤—ã—à–µ–Ω–∏–µ"])
async def roles_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Essence"] == "–ö–∞–Ω–¥–∏–¥–∞—Ç":
        await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ü—Ä–æ–π–¥–∏—Ç–µ –ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—é")
    elif user_in_mongo["Essence"] == "–ù–µ–æ—Ñ–∏—Ç":
        await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –°—Ç–∞—Ç—å –°–∫–∞—É—Ç–æ–º")
    elif user_in_mongo["Essence"] == "–°–∫–∞—É—Ç":
        await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –ü–æ—Å–ª–µ–¥–Ω—è—è –ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è")
    elif user_in_mongo["Essence"] in roles_imperium_ig:
        role = next_rank(user_in_mongo["Essence"], roles_imperium_ig)
        price = roles_imperium_ig[role]["Price"]
        if user_in_mongo["Experience"] >= price:
            strength = roles_imperium_ig[role]['Strength']
            collection.update_one({'_id': message.from_id},
                                  {'$set': {'Essence': role}, '$inc': {'Experience': -price, 'Strength': strength}})
            await message.answer(
                message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –±—ã–ª–∏ –ø–æ–≤—ã—à–µ–Ω—ã –¥–æ {role}, –≤–∞—à –æ–ø—ã—Ç –±—ã–ª —É–º–µ–Ω—å—à–µ–Ω –Ω–∞ {price} –∏ –ø–æ–≤—ã—à–µ–Ω—ã —Å—Ç–∞—Ç—ã")
        else:
            await message.answer(
                message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ù–µ–¥–æ—Å—Ç–æ—á–Ω–æ –æ–ø—ã—Ç–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ {price}")
    elif user_in_mongo["Essence"] in roles_imperium_sm:
            role = next_rank(user_in_mongo["Essence"], roles_imperium_sm)
            price = roles_imperium_sm[role]["Price"]
            if user_in_mongo["Experience"] >= price:
                strength = roles_imperium_sm[role]['Strength']
                collection.update_one({'_id': message.from_id},
                                      {'$set': {'Essence': role}, '$inc': {'Experience': -price, 'Strength': strength}})
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –±—ã–ª–∏ –ø–æ–≤—ã—à–µ–Ω—ã –¥–æ {role}, –≤–∞—à –æ–ø—ã—Ç –±—ã–ª —É–º–µ–Ω—å—à–µ–Ω –Ω–∞ {price} –∏ –ø–æ–≤—ã—à–µ–Ω—ã —Å—Ç–∞—Ç—ã")
            else:
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ù–µ–¥–æ—Å—Ç–æ—á–Ω–æ –æ–ø—ã—Ç–∞, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ {price}")
    else:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ —Ä–µ–µ—Å—Ç—Ä –±–æ–π—Ü–æ–≤ reg")


@bot.on.chat_message(text=["–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞", "—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"])
async def charge_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Essence"] in roles_imperium_ig:
        a = user_in_mongo["Dates"]["Date_ig_Workout"]["time"]
        b = datetime.utcnow()
        c = b - a
        if c.total_seconds() >= 1800:
            await message.answer(
                message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–ª —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É. –û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ 20, —Å–∏–ª–∞ –Ω–∞ 1. –°–ª–µ–¥—É—é—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ –ø–æ–ª —á–∞—Å–∞")
            collection.update_one({'_id': message.from_id},
                                  {'$set': {"Dates.Date_ig_Workout.time": datetime.utcnow()},
                                   '$inc': {'Experience': 20, 'Strength': 1}})
        else:
            await message.answer(
                message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ –±—ã–ª–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ! –ö–¥ –ø–æ–ª —á–∞—Å–∞")
    elif user_in_mongo["Essence"] in roles_imperium_sm:
        if user_in_mongo["Essence"] == "–ö–∞–Ω–¥–∏–¥–∞—Ç":
            a = user_in_mongo["Dates"]["Date_sm_Workout"]["time"]
            b = datetime.utcnow()
            c = b - a
            if c.total_seconds() >= 300:
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–ª —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É. –û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ 20, —Å–∏–ª–∞ –Ω–∞ 3. –°–ª–µ–¥—É—é—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
                collection.update_one({'_id': message.from_id},
                                      {'$set': {"Dates.Date_sm_Workout.time": datetime.utcnow()},
                                       '$inc': {'Experience': 20, 'Strength': 3}})
            else:
                await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ –±—ã–ª–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ! –ö–¥ 5 –º–∏–Ω—É—Ç")
        else:
            a = user_in_mongo["Dates"]["Date_sm_Workout"]["time"]
            b = datetime.utcnow()
            c = b - a
            if c.total_seconds() >= 1800:
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–ª —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É. –û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ 10, —Å–∏–ª–∞ –Ω–∞ 0.5. –°–ª–µ–¥—É—é—â–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —á–µ—Ä–µ–∑ –ø–æ–ª —á–∞—Å–∞")
                collection.update_one({'_id': message.from_id},
                                      {'$set': {"Dates.Date_sm_Workout.time": datetime.utcnow()},
                                       '$inc': {'Experience': 10, 'Strength': 0.5}})
            else:
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ –±—ã–ª–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–µ! –ö–¥ –ø–æ–ª —á–∞—Å–∞")


@bot.on.chat_message(text=["–°—Ç—Ä–µ–ª—å–±–∏—â–µ", "—Å—Ç—Ä–µ–ª—å–±–∏—â–µ"])
async def charge_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Essence"] in str(roles_imperium_ig):
        a = user_in_mongo["Dates"]["Date_ig_Shooting"]["time"]
        b = datetime.utcnow()
        c = b - a
        if c.total_seconds() >= 3600:
            await message.answer(
                message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–≤–µ–ª —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –Ω–∞ —Å—Ç—Ä–µ–ª—å–±–∏—â–µ. –û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ 10, —Å–∏–ª–∞ –Ω–∞ 1")
            collection.update_one({'_id': message.from_id},
                                  {'$set': {"Dates.Date_ig_Shooting.time": datetime.utcnow()},
                                   '$inc': {'Experience': 10, 'Strength': 1}})
        else:
            await message.answer(
                message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ –±—ã–ª–∏ –Ω–∞ —Å—Ç—Ä–µ–ª—å–±–∏—â–µ! –ö–î —á–∞—Å")
    else:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—Å—Ç—É–ø–∏—Ç–µ –≤ –ò–º–ø–µ—Ä—Å–∫—É—é –ì–≤–∞—Ä–¥–∏—é!")


@bot.on.chat_message(text=["–í–∞—Ö—Ç–∞", "–≤–∞—Ö—Ç–∞"])
async def charge_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Essence"] in str(roles_imperium_ig):
        a = user_in_mongo["Dates"]["Date_ig_vaxta"]["time"]
        b = datetime.utcnow()
        c = b - a
        if c.total_seconds() >= 3600:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –Ω–∞ –≤–∞—Ö—Ç—É. –û–ø—ã—Ç –ø–æ–≤—ã—à–µ–Ω –Ω–∞ 10, —Å–∏–ª–∞ –Ω–∞ 1")
            collection.update_one({'_id': message.from_id},
                                  {'$set': {"Dates.Date_ig_vaxta.time": datetime.utcnow()},
                                   '$inc': {'Experience': 10, 'Strength': 1}})
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ –±—ã–ª–∏ –Ω–∞ –≤–∞—Ö—Ç–µ! –ö–¥ —á–∞—Å")
    else:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—Å—Ç—É–ø–∏—Ç–µ –≤ –ò–º–ø–µ—Ä—Å–∫—É—é –ì–≤–∞—Ä–¥–∏—é!")


@bot.on.chat_message(text=["–°—Ç–∞—Ç—å –ö–∞–Ω–¥–∏–¥–∞—Ç–æ–º", "—Å—Ç–∞—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º", "–°—Ç–∞—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º"])
async def roles_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Essence"] in roles_imperium_ig:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –∏–º–ø–µ—Ä—Å–∫–æ–π –≥–≤–∞—Ä–¥–∏–∏")
    elif user_in_mongo["Essence"] in roles_imperium_sm:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ö–æ—Å–º–æ–¥–µ—Å–∞–Ω—Ç–∞")
    elif user_in_mongo["Planet"] in str(current_planet):
        if user_in_mongo["Strength"] >= 50:
            if user_in_mongo["Experience"] >= 50:
                collection.update_one({'_id': message.from_id},
                                      {'$set': {'Essence': "–ö–∞–Ω–¥–∏–¥–∞—Ç",
                                                'Structure': "–ö–æ—Å–º–æ–¥–µ—Å–∞–Ω—Ç",
                                                "Dates.Date_sm_implants.time": datetime.utcnow() - timedelta(
                                                    minutes=40), "Dates.Date_sm_implants.name": "–ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è",
                                                "Dates.Date_sm_Workout.time": datetime.utcnow() - timedelta(
                                                    minutes=30), "Dates.Date_sm_Workout.name": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
                                                "implants": "0/19",
                                                "Chemical_processing": False},
                                       '$inc': {"Strength": 5,
                                                'Experience': -50},
                                       '$unset': {"Dates.Date_citizen_work": 1,
                                                  "Dates.Date_fight": 1}})
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í–∞—Å –ø—Ä–∏–Ω—è–ª–∏ –∫–∞–∫ –ö–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤ –∫–æ—Å–º–æ–¥–µ—Å–∞–Ω—Ç.")
            else:
                await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø—ã—Ç–∞")
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —Å–ª–∏—à–∫–æ–º —Å–ª–∞–±—ã")
    else:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ —Ä–µ–µ—Å—Ç—Ä –±–æ–π—Ü–æ–≤ reg")


@bot.on.chat_message(text=["–•–∏–º–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞", "—Ö–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∞"])
async def info_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Essence"] == "–ö–∞–Ω–¥–∏–¥–∞—Ç":
        if user_in_mongo["Chemical_processing"] == False:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}],–í—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ —Ö–∏–º–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É")
            collection.update_one({"_id": message.from_id}, {"$set": {"Chemical_processing": True}})
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í–∞–º –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ö–∏–º–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞")


@bot.on.chat_message(text=["–ì–∏–ø–Ω–æ—Ç–µ—Ä–∞–ø–∏—è", "–≥–∏–ø–Ω–æ—Ç–µ—Ä–∞–ø–∏—è"])
async def info_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Essence"] == "–ö–∞–Ω–¥–∏–¥–∞—Ç":
        if user_in_mongo["Hypnotherapy"] == False:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}],–í—ã –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –ì–∏–ø–Ω–æ—Ç–µ—Ä–∞–ø–∏—é")
            collection.update_one({"_id": message.from_id}, {"$set": {"Hypnotherapy": True}})
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í–∞–º –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ì–∏–ø–Ω–æ—Ç–µ—Ä–∞–ø–∏—è")

implants_0_5 = ["0/19", "3/19", "5/19"]
implants_6_13 = ["6/19", "9/19", "13/19", "15/19"]

@bot.on.chat_message(text=["–ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è", "–∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è"])
async def info_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Essence"] == "–ö–∞–Ω–¥–∏–¥–∞—Ç":
        a = user_in_mongo['Dates']['Date_sm_implants']["time"]
        b = datetime.utcnow()
        c = b - a
        if user_in_mongo["Chemical_processing"] == False:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ø–µ—Ä–µ–¥ –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏–µ–π –í–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–π—Ç–∏ —Ö–∏–º–∏—á–µ—Å–∫—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É")
        elif user_in_mongo["Experience"] < 50:
            await message.answer(message="–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø—ã—Ç–∞")
        elif c.total_seconds() >= 1200:
            if user_in_mongo["implants"] == "0/19":
                collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_sm_implants.time": datetime.utcnow()}})
                Heart = random.choices(["Success", "Fail"], weights=[user_in_mongo["Strength"], 60-user_in_mongo["Strength"]], k=1)[0]
                Ossmodula = random.choices(["Success", "Fail"], weights=[user_in_mongo["Strength"], 60-user_in_mongo["Strength"]], k=1)[0]
                Biscopia = random.choices(["Success", "Fail"], weights=[user_in_mongo["Strength"], 60-user_in_mongo["Strength"]], k=1)[0]
                await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –í—Ç–æ—Ä–æ–µ —Å–µ—Ä–¥—Ü–µ")
                if Heart == "Success":
                    await message.answer(message="–£—Å–ø–µ—Ö!")
                    await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –û—Å—Å–º–æ–¥—É–ª–∞")
                    if Ossmodula == "Success":
                        await message.answer(message="–£—Å–ø–µ—Ö!")
                        await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ë–∏—Å–∫–æ–ø–∏—è")
                        if Biscopia == "Success":
                            await message.answer(message="–£—Å–ø–µ—Ö!")
                            collection.update_one({"_id": message.from_id},
                                                  {"$set": {"implants": "3/19", "Chemical_processing": False},
                                                   "$inc": {"Experience": -50, "Strength": 2}})
                        else:
                            await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                            collection.update_one({"_id": message.from_id},
                                                  {"$set": {"Chemical_processing": False},
                                                   "$inc": {"Experience": -(user_in_mongo["Experience"]/2),
                                                            "Strength": -(user_in_mongo["Strength"]/2)}})
                    else:
                        await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                        collection.update_one({"_id": message.from_id},
                                              {"$set": {"Chemical_processing": False},
                                               "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                        "Strength": -(user_in_mongo["Strength"] / 2)}})
                else:
                    await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                    collection.update_one({"_id": message.from_id},
                                          {"$set": {"Chemical_processing": False},
                                           "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                    "Strength": -(user_in_mongo["Strength"] / 2)}})
            elif user_in_mongo["implants"] == "3/19":
                collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_sm_implants.time": datetime.utcnow()}})
                Gemastamen = random.choices(["Success", "Fail"], weights=[user_in_mongo["Strength"], 70-user_in_mongo["Strength"]], k=1)[0]
                Larraman = random.choices(["Success", "Fail"], weights=[user_in_mongo["Strength"], 70-user_in_mongo["Strength"]], k=1)[0]
                await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ì–µ–º–∞—Å—Ç–∞–º–µ–Ω")
                if Gemastamen == "Success":
                    await message.answer(message="–£—Å–ø–µ—Ö!")
                    await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –û—Ä–≥–∞–Ω –õ–∞—Ä—Ä–∞–º–∞–Ω–∞")
                    if Larraman == "Success":
                        await message.answer(message="–£—Å–ø–µ—Ö!")
                        collection.update_one({"_id": message.from_id},
                                              {"$set": {"implants": "5/19", "Chemical_processing": False},
                                               "$inc": {"Experience": -50, "Strength": 2}})
                    else:
                        await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                        collection.update_one({"_id": message.from_id},
                                              {"$set": {"Chemical_processing": False},
                                               "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                        "Strength": -(user_in_mongo["Strength"] / 2)}})
                else:
                    await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                    collection.update_one({"_id": message.from_id},
                                          {"$set": {"Chemical_processing": False},
                                           "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                    "Strength": -(user_in_mongo["Strength"] / 2)}})
            elif user_in_mongo["implants"] == "5/19":
                collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_sm_implants.time": datetime.utcnow()}})
                Cataleptic_Knot = random.choices(["Success", "Fail"], weights=[user_in_mongo["Strength"], 80-user_in_mongo["Strength"]], k=1)[0]
                await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ö–∞—Ç–∞–ª–µ–ø—Ç–∏—á–µ—Å–∫–∏–π –£–∑–µ–ª")
                if Cataleptic_Knot == "Success":
                    await message.answer(message="–£—Å–ø–µ—Ö! –° —ç—Ç–æ–≥–æ —ç—Ç–∞–ø–∞ –≤—ã –¥–æ–ª–∂–Ω—ã –±—É–¥–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ì–∏–ø–Ω–æ—Ç–µ—Ä–∞–ø–∏—é, "
                                                 "—á—Ç–æ–±—ã –æ—Ä–≥–∞–Ω—ã –ª—É—á—à–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –æ—Ä–≥–∞–Ω—ã")
                    collection.update_one({"_id": message.from_id},
                                          {"$set": {"implants": "6/19", "Chemical_processing": False, "Hypnotherapy": False},
                                           "$inc": {"Experience": -50, "Strength": 3}})
                else:
                    await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                    collection.update_one({"_id": message.from_id},
                                          {"$set": {"Chemical_processing": False},
                                           "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                    "Strength": -(user_in_mongo["Strength"] / 2)}})
            elif user_in_mongo["implants"] == "6/19":
                if user_in_mongo["Hypnotherapy"] == True:
                    collection.update_one({"_id": message.from_id},
                                          {"$set": {"Dates.Date_sm_implants.time": datetime.utcnow()}})
                    Preomnor = random.choices(["Success", "Fail"],
                                              weights=[user_in_mongo["Strength"], 90 - user_in_mongo["Strength"]], k=1)[0]
                    Omophagy = random.choices(["Success", "Fail"],
                                              weights=[user_in_mongo["Strength"], 90 - user_in_mongo["Strength"]], k=1)[0]
                    Multilung = random.choices(["Success", "Fail"],
                                               weights=[user_in_mongo["Strength"], 90 - user_in_mongo["Strength"]], k=1)[0]
                    await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ü—Ä–µ–æ–º–Ω–æ—Ä")
                    if Preomnor == "Success":
                        await message.answer(message="–£—Å–ø–µ—Ö!")
                        await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –û–º–æ—Ñ–∞–≥–∏—è")
                        if Omophagy == "Success":
                            await message.answer(message="–£—Å–ø–µ—Ö!")
                            await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ú—É–ª—å—Ç–∏–ª–µ–≥–∫–æ–µ")
                            if Multilung == "Success":
                                await message.answer(message="–£—Å–ø–µ—Ö!")
                                collection.update_one({"_id": message.from_id},
                                                      {"$set": {"implants": "9/19", "Chemical_processing": False,
                                                                "Hypnotherapy": False},
                                                       "$inc": {"Experience": -50, "Strength": 2}})
                            else:
                                await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                                collection.update_one({"_id": message.from_id},
                                                      {"$set": {"Chemical_processing": False,
                                                                "Hypnotherapy": False},
                                                       "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                                "Strength": -(user_in_mongo["Strength"] / 2)}})
                        else:
                            await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                            collection.update_one({"_id": message.from_id},
                                                  {"$set": {"Chemical_processing": False,
                                                            "Hypnotherapy": False},
                                                   "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                            "Strength": -(user_in_mongo["Strength"] / 2)}})
                    else:
                        await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                        collection.update_one({"_id": message.from_id},
                                              {"$set": {"Chemical_processing": False,
                                                        "Hypnotherapy": False},
                                               "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                        "Strength": -(user_in_mongo["Strength"] / 2)}})
                else:
                    await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ø—Ä–æ–π–¥–∏—Ç–µ –ì–∏–ø–Ω–æ—Ç–µ—Ä–∞–ø–∏—é!")
            elif user_in_mongo["implants"] == "9/19":
                if user_in_mongo["Hypnotherapy"] == True:
                    collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_sm_implants.time": datetime.utcnow()}})
                    Occuloba = random.choices(["Success", "Fail"],
                                              weights=[user_in_mongo["Strength"], 100 - user_in_mongo["Strength"]], k=1)[0]
                    Limans_ear = random.choices(["Success", "Fail"],
                                                weights=[user_in_mongo["Strength"], 100 - user_in_mongo["Strength"]], k=1)[0]
                    Anabiotic_Membrane = random.choices(["Success", "Fail"],
                                                        weights=[user_in_mongo["Strength"], 100 - user_in_mongo["Strength"]], k=1)[0]
                    Melanochromic_Organ = random.choices(["Success", "Fail"],
                                                         weights=[user_in_mongo["Strength"], 100 - user_in_mongo["Strength"]], k=1)[0]
                    await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –û–∫–∫—É–ª–æ–±–∞")
                    if Occuloba == "Success":
                        await message.answer(message="–£—Å–ø–µ—Ö!")
                        await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –£—Ö–æ –õ–∏–º–∞–Ω–∞")
                        if Limans_ear == "Success":
                            await message.answer(message="–£—Å–ø–µ—Ö!")
                            await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ê–Ω–∞–±–∏–æ–∑–Ω–∞—è –ú–µ–º–±—Ä–∞–Ω–∞")
                            if Anabiotic_Membrane == "Success":
                                await message.answer(message="–£—Å–ø–µ—Ö!")
                                await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ú–µ–ª–∞–Ω–æ—Ö—Ä–æ–º–∏—á–µ—Å–∫–∏–π –û—Ä–≥–∞–Ω")
                                if Melanochromic_Organ == "Success":
                                    await message.answer(message="–£—Å–ø–µ—Ö!")
                                    collection.update_one({"_id": message.from_id},
                                                          {"$set": {"implants": "13/19", "Chemical_processing": False,
                                                                    "Hypnotherapy": False},
                                                           "$inc": {"Experience": -50, "Strength": 3}})
                                else:
                                    await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                                    collection.update_one({"_id": message.from_id},
                                                          {"$set": {"Chemical_processing": False,
                                                                    "Hypnotherapy": False},
                                                           "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                                    "Strength": -(user_in_mongo["Strength"] / 2)}})
                            else:
                                await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                                collection.update_one({"_id": message.from_id},
                                                      {"$set": {"Chemical_processing": False,
                                                                "Hypnotherapy": False},
                                                       "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                                "Strength": -(user_in_mongo["Strength"] / 2)}})
                        else:
                            await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                            collection.update_one({"_id": message.from_id},
                                                  {"$set": {"Chemical_processing": False,
                                                            "Hypnotherapy": False},
                                                   "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                            "Strength": -(user_in_mongo["Strength"] / 2)}})
                    else:
                        await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                        collection.update_one({"_id": message.from_id},
                                              {"$set": {"Chemical_processing": False,
                                                        "Hypnotherapy": False},
                                               "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                        "Strength": -(user_in_mongo["Strength"] / 2)}})
                else:
                    await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ø—Ä–æ–π–¥–∏—Ç–µ –ì–∏–ø–Ω–æ—Ç–µ—Ä–∞–ø–∏—é!")
            elif user_in_mongo["implants"] == "13/19":
                collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_sm_implants.time": datetime.utcnow()}})
                Oolitic_Bud = random.choices(["Success", "Fail"], weights=[user_in_mongo["Strength"], 120 - user_in_mongo["Strength"]], k=1)[0]
                Neuroglottis = random.choices(["Success", "Fail"], weights=[user_in_mongo["Strength"], 120 - user_in_mongo["Strength"]], k=1)[0]
                await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –û–æ–ª–∏—Ç–æ–≤–∞—è –ü–æ—á–∫–∞")
                if Oolitic_Bud == "Success":
                    await message.answer(message="–£—Å–ø–µ—Ö!")
                    await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ù–µ–π—Ä–æ–≥–ª–æ—Ç—Ç–∏—Å")
                    if Neuroglottis == "Success":
                        await message.answer(message="–£—Å–ø–µ—Ö!")
                        collection.update_one({"_id": message.from_id},
                                              {"$set": {"implants": "15/19", "Chemical_processing": False,
                                                        "Hypnotherapy": False},
                                               "$inc": {"Experience": -50, "Strength": 3}})
                    else:
                        await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                        collection.update_one({"_id": message.from_id},
                                              {"$set": {"Chemical_processing": False,
                                                        "Hypnotherapy": False},
                                               "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                        "Strength": -(user_in_mongo["Strength"] / 2)}})
                else:
                    await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                    collection.update_one({"_id": message.from_id},
                                          {"$set": {"Chemical_processing": False,
                                                    "Hypnotherapy": False},
                                           "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                    "Strength": -(user_in_mongo["Strength"] / 2)}})
            elif user_in_mongo["implants"] == "15/19":
                collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_sm_implants.time": datetime.utcnow()}})
                if user_in_mongo["Hypnotherapy"] == True:
                    mucranoid = random.choices(["Success", "Fail"],
                                              weights=[user_in_mongo["Strength"], 150 - user_in_mongo["Strength"]], k=1)[0]
                    Betchers_iron = random.choices(["Success", "Fail"],
                                              weights=[user_in_mongo["Strength"], 150 - user_in_mongo["Strength"]], k=1)[0]
                    Progenoids = random.choices(["Success", "Fail"],
                                               weights=[user_in_mongo["Strength"], 150 - user_in_mongo["Strength"]], k=1)[0]
                    await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ú—É–∫—Ä–∞–Ω–æ–∏–¥")
                    if mucranoid == "Success":
                        await message.answer(message="–£—Å–ø–µ—Ö!")
                        await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ñ–µ–ª–µ–∑–∞ –ë–µ—Ç—á–µ—Ä–∞")
                        if Betchers_iron == "Success":
                            await message.answer(message="–£—Å–ø–µ—Ö!")
                            await message.answer(message="‚öô–í–∂–∏–≤–ª–µ–Ω–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞: –ü—Ä–æ–≥–µ–Ω–æ–∏–¥—ã")
                            if Progenoids == "Success":
                                await message.answer(message="–£—Å–ø–µ—Ö! –° —ç—Ç–æ–≥–æ —ç—Ç–∞–ø–∞ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ —Å–∫–∞—É—Ç–æ–º")
                                collection.update_one({"_id": message.from_id},
                                                      {"$set": {"implants": "18/19", "Essence": "–ù–µ–æ—Ñ–∏—Ç", "Chemical_processing": False},
                                                       "$inc": {"Experience": -50, "Strength": 3},
                                                       "$unset": {"Hypnotherapy": 1}})
                            else:
                                await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                                collection.update_one({"_id": message.from_id},
                                                      {"$set": {"Chemical_processing": False,
                                                                "Hypnotherapy": False},
                                                       "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                                "Strength": -(user_in_mongo["Strength"] / 2)}})
                        else:
                            await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                            collection.update_one({"_id": message.from_id},
                                                  {"$set": {"Chemical_processing": False,
                                                            "Hypnotherapy": False},
                                                   "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                            "Strength": -(user_in_mongo["Strength"] / 2)}})
                    else:
                        await message.answer(message="–û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ –Ω–µ—É–¥–∞—á–Ω–æ...")
                        collection.update_one({"_id": message.from_id},
                                              {"$set": {"Chemical_processing": False,
                                                        "Hypnotherapy": False},
                                               "$inc": {"Experience": -(user_in_mongo["Experience"] / 2),
                                                        "Strength": -(user_in_mongo["Strength"] / 2)}})
                else:
                    await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –ø—Ä–æ–π–¥–∏—Ç–µ –ì–∏–ø–Ω–æ—Ç–µ—Ä–∞–ø–∏—é!")
        else:
            await message.answer(message="–ú–µ–∂–¥—É –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è–º–∏ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ 20 –º–∏–Ω—É—Ç")


@bot.on.chat_message(text=["–°—Ç–∞—Ç—å –°–∫–∞—É—Ç–æ–º"])
async def roles_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Essence"] in roles_imperium_ig:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –∏–º–ø–µ—Ä—Å–∫–æ–π –≥–≤–∞—Ä–¥–∏–∏")
    elif user_in_mongo["Planet"] in str(current_planet):
        if user_in_mongo["Essence"] == "–ù–µ–æ—Ñ–∏—Ç":
            collection.update_one({'_id': message.from_id},
                                  {'$set': {'Essence': "–°–∫–∞—É—Ç",
                                            "Dates.Date_sm_Workout.time": datetime.utcnow() - timedelta(
                                                minutes=30), "Dates.Date_sm_Workout.name": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
                                            "Dates.Date_ig_crusade.time": datetime.utcnow() - timedelta(
                                                minutes=1440), "Dates.Date_ig_crusade.name": "–ü–æ—Ö–æ–¥"},
                                   '$inc': {"Strength": 5},
                                   '$unset': {"Dates.Date_sm_implants": 1,"Chemical_processing": 1,"Hypnotherapy":1}})
            await message.answer(
                message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–∂–∏–ª–∏ –¥–æ –°–∫–∞—É—Ç–∞.")
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–º–ø–ª–∞–Ω—Ç–æ–≤")
    else:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ —Ä–µ–µ—Å—Ç—Ä –±–æ–π—Ü–æ–≤ reg")


@bot.on.chat_message(text=["–ü–æ—Å–ª–µ–¥–Ω—è—è –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è"])
async def roles_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã–±–µ—Ä–µ—Ç–µ –æ–¥–Ω—É –∏–∑ –ø–ª–∞–Ω–µ—Ç –¥–ª—è —Ä–æ–∂–¥–µ–Ω–∏—è. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: –ü–ª–∞–Ω–µ—Ç—ã")
    elif user_in_mongo["Essence"] in roles_imperium_ig:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –∏–º–ø–µ—Ä—Å–∫–æ–π –≥–≤–∞—Ä–¥–∏–∏")
    elif user_in_mongo["Planet"] in str(current_planet):
        if user_in_mongo["Essence"] == "–°–∫–∞—É—Ç":
            if user_in_mongo["Experience"] >= 500:
                collection.update_one({'_id': message.from_id},
                                      {'$set': {'Essence': "–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å",
                                                "Dates.Date_sm_Workout.time": datetime.utcnow() - timedelta(
                                                    minutes=30), "Dates.Date_sm_Workout.name": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞"},
                                       '$inc': {"Strength": 300,
                                                'Experience': -500},
                                       })
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –≤–∞—Å –ø–æ–≤—ã—Å–∏–ª–∏ –¥–æ –æ–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—è")
            else:
                await message.answer(
                    message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –Ω–µ–¥–æ—Å—Ç–æ—á–Ω–æ –æ–ø—ã—Ç–∞. –ù—É–∂–Ω–æ 500")
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–º–ø–ª–∞–Ω—Ç–æ–≤")
    else:
        await message.answer(
            message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ —Ä–µ–µ—Å—Ç—Ä –±–æ–π—Ü–æ–≤ reg")


@bot.on.chat_message(text="–°–æ–±—Ä–∞—Ç—å –ø–æ—Ö–æ–¥")
async def help_handler(message: Message):
    current_message = f"[id{message.from_id}|{collection.find_one({'_id': message.from_id})['Nickname']}], –°–ø–∏—Å–æ–∫ –≤—Ä–∞–≥–æ–≤ –¥–ª—è –ø–æ—Ö–æ–¥–∞\n"
    count = 1
    for i in range(len(enemy_list)):
        current_message = current_message + f"{count}) {enemy_list[count]['Name']}, –º–æ—â—å - {enemy_list[count]['Strength']}\n"
        count = count + 1
    await message.answer(current_message)


@bot.on.chat_message(text="–°–æ–±—Ä–∞—Ç—å –ø–æ—Ö–æ–¥ <msg>")
async def help_handler(message: Message, msg):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Essence"] in roles_imperium_sm:
        if roles_imperium_sm[user_in_mongo["Essence"]]["limit"] >= 1:
            a = user_in_mongo['Dates']['Date_ig_crusade']["time"]
            b = datetime.utcnow()
            c = b - a
            if c.total_seconds() >= 10800:
                role = roles_imperium_sm[user_in_mongo["Essence"]]["limit"]
                mes = int(msg)
                if mes in enemy_list:
                    current = str(list(cruiser.find()))
                    if str(message.from_id) in current:
                        await message.answer(message="–í—ã —É–∂–µ –Ω–∞ –∫–æ—Ä–∞–±–ª–µ")
                    else:
                        try:
                            cruiser.insert_one(
                                {'_id': message.from_id,
                                 "Nickname": user_in_mongo["Nickname"],
                                 "limit": role,
                                 "objective": mes,
                                 "Strength": user_in_mongo["Strength"],
                                 "peer_id": message.peer_id,
                                 "partners": {}}
                            )
                            await message.answer(message=f"–ö–æ—Ä–∞–±–ª—å –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—é.\n –ù–æ–º–µ—Ä: {message.from_id}")
                        except DuplicateKeyError:
                            await message.answer(message="–í—ã —É–∂–µ —Å–æ–∑–¥–∞–ª–∏ –∏–≤–µ–Ω—Ç")
            else:
                await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ –±—ã–ª–∏ –≤ –ø–æ—Ö–æ–¥–µ")
        else:
            await message.answer(message="–ó–≤–∞–Ω–∏–µ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –í–∞–º —Å–æ–±–∏—Ä–∞—Ç—å –ø–æ—Ö–æ–¥—ã!")
    elif user_in_mongo["Essence"] in roles_imperium_ig:
        if roles_imperium_ig[user_in_mongo["Essence"]]["limit"] >= 1:
            a = user_in_mongo['Dates']['Date_ig_crusade']["time"]
            b = datetime.utcnow()
            c = b - a
            if c.total_seconds() >= 10800:
                role = roles_imperium_ig[user_in_mongo["Essence"]]["limit"]
                mes = int(msg)
                if mes in enemy_list:
                    current = str(list(cruiser.find()))
                    if str(message.from_id) in current:
                        await message.answer(message="–í—ã —É–∂–µ –Ω–∞ –∫–æ—Ä–∞–±–ª–µ")
                    else:
                        try:
                            cruiser.insert_one(
                                {'_id': message.from_id,
                                 "Nickname": user_in_mongo["Nickname"],
                                 "limit": role,
                                 "objective": mes,
                                 "Strength": user_in_mongo["Strength"],
                                 "peer_id": message.peer_id,
                                 "partners": {}}
                            )
                            await message.answer(message=f"–ö–æ—Ä–∞–±–ª—å –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—é.\n –ù–æ–º–µ—Ä: {message.from_id}")
                        except DuplicateKeyError:
                            await message.answer(message="–í—ã —É–∂–µ —Å–æ–∑–¥–∞–ª–∏ –∏–≤–µ–Ω—Ç")
            else:
                await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ –±—ã–ª–∏ –≤ –ø–æ—Ö–æ–¥–µ")
        else:
            await message.answer(message="–ó–≤–∞–Ω–∏–µ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –í–∞–º —Å–æ–±–∏—Ä–∞—Ç—å –ø–æ—Ö–æ–¥—ã!")


@bot.on.chat_message(text="–ü–æ—Ö–æ–¥ <msg>")
async def help_handler(message: Message, msg):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Essence"] == "–ü—Ä–∏–∑—ã–≤–Ω–∏–∫":
        await message.answer(message="–í–∞–º –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –æ–±—É—á–µ–Ω–∏–µ –∏ –≤–∞–º –µ—â–µ —Ä–∞–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—Å—è –≤ –ø–æ—Ö–æ–¥—ã")
    elif user_in_mongo["Essence"] == "–ö–∞–Ω–¥–∏–¥–∞—Ç":
        await message.answer(message="–í–∞–º –Ω–µ –∑–∞–∫–æ–Ω—á–∏–ª–∏ –æ–±—É—á–µ–Ω–∏–µ –∏ –≤–∞–º –µ—â–µ —Ä–∞–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—Å—è –≤ –ø–æ—Ö–æ–¥—ã")
    else:
        a = user_in_mongo['Dates']['Date_ig_crusade']["time"]
        b = datetime.utcnow()
        c = b - a
        if c.total_seconds() >= 10800:
            current = str(list(cruiser.find()))
            if msg in current:
                cruiser_id = cruiser.find_one({"_id": int(msg)})
                if str(message.from_id) in current:
                    await message.answer(message="–í—ã —É–∂–µ –≤ –∫–æ—Ä–∞–±–ª–µ")
                elif cruiser_id["limit"] == len(cruiser_id["partners"]):
                    await message.answer(message="–ö–æ—Ä–∞–±–ª—å —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω")
                else:
                    int_msg = int(msg)
                    cruiser.update_one({"_id": int_msg}, {"$set": {f"partners.{message.from_id}": {"peer_id": message.peer_id}}, "$inc": {"Strength": user_in_mongo["Strength"]}})
                    await message.answer(message="–í—ã –ø–æ—Å—Ç—É–ø–∏–ª–∏ –≤ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–æ—Ä–∞–±–ª—è")
            else:
                await message.answer(message="–î–∞–Ω–Ω–æ–≥–æ –∫–æ—Ä–∞–±–ª—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –í—ã —É–∂–µ –±—ã–ª–∏ –≤ –ø–æ—Ö–æ–¥–µ")


@bot.on.chat_message(text="–ü–æ—Ö–æ–¥")
async def help_handler(message: Message):
    cruiser_ha = cruiser.find()
    current_mess = "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –≤ –ø–æ—Ö–æ–¥, —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –∫–æ—Ä–∞–±–ª—å –∏–ª–∏ –∑–∞–π–¥–∏—Ç–µ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–º–∞–Ω–¥–æ–π:\n–ü–æ—Ö–æ–¥ –ù–æ–º–µ—Ä –∫–æ—Ä–∞–±–ª—è (–ü—Ä–∏–º–µ—Ä –ü–æ—Ö–æ–¥ 111111)"
    count = 0
    for i in cruiser_ha:
        count = count + 1
        current_mess = current_mess + f"\n{count})–¶–µ–ª—å - {enemy_list[i['objective']]['Name']} –ù–æ–º–µ—Ä –∫–æ—Ä–∞–±–ª—è - {i['_id']}, –°–æ–∑–¥–∞—Ç–µ–ª—å - [id{i['_id']}|{i['Nickname']}], –ó–∞–Ω—è—Ç–æ - {len(i['partners'])}/{i['limit']}, –æ–±—â–∞—è —Å–∏–ª–∞ {i['Strength']}"
    await message.answer(current_mess)


@bot.on.chat_message(text="–°–æ—Å—Ç–∞–≤ –∫–æ—Ä–∞–±–ª—è")
async def help_handler(message: Message):
    current_mess = "–°–æ—Å—Ç–∞–≤ –ø–æ—Ö–æ–¥–∞:"
    cruiser_id = cruiser.find_one({"_id": message.from_id})
    count = 0
    for i in range(len(cruiser_id["partners"])):
        user_in_mongo = collection.find_one({"_id": int(list(cruiser_id["partners"])[i])})
        count = count + 1
        current_mess = current_mess + f"\n{count}) [id{list(cruiser_id['partners'])[i]}|{user_in_mongo['Nickname']}] - {user_in_mongo['Essence']}, —Å–∏–ª–∞ - {user_in_mongo['Strength']}"
    await message.answer(current_mess)


@bot.on.chat_message(text="–°–±—Ä–æ—Å")
async def refresh_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Essence"] == "–°–∫–∞—É—Ç":
        collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_ig_crusade.time": datetime.utcnow() - timedelta(
                                                minutes=1440)}})
        await message.answer("True")
    elif user_in_mongo["Essence"] == "–û–ø—É—Å—Ç–æ—à–∏—Ç–µ–ª—å":
        collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_ig_crusade.time": datetime.utcnow() - timedelta(
                                                minutes=1440)}})
        await message.answer("True")
    elif user_in_mongo["Essence"] == "–®—Ç—É—Ä–º–æ–≤–∏–∫":
        collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_ig_crusade.time": datetime.utcnow() - timedelta(
                                                minutes=1440)}})
        await message.answer("True")
    else:
        await message.answer("hui")


@bot.on.chat_message(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ—Ä–∞–±–ª—å")
async def help_handler(message: Message):
    current = str(list(cruiser.find()))
    if str(message.from_id) in current:
        cruiser_id = cruiser.find_one({"_id": message.from_id})
        user_strength = cruiser_id["Strength"]
        aboba = random.choices(["win_self", "win_opp"], weights=[user_strength, enemy_list[cruiser_id["objective"]]["Strength"]], k=1)[0]
        if aboba == "win_self":
            rating_current = (3 / (
                        user_strength / (user_strength + enemy_list[cruiser_id["objective"]]["Strength"]))) * (enemy_list[cruiser_id["objective"]]["Strength"]/user_strength)
            collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_ig_crusade.time": datetime.utcnow()}, "$inc": {"Experience": rating_current}})
            cruiser.delete_one({"_id": message.from_id})
            for i in range(len(cruiser_id["partners"])):
                collection.update_one({"_id": int(list(cruiser_id["partners"])[i])}, {"$set": {"Dates.Date_ig_crusade.time": datetime.utcnow()}, "$inc": {"Experience": 50}})
            await message.answer(message=f"–í–∞—à –æ—Ç—Ä—è–¥ –ø–æ–±–µ–¥–∏–ª, –∫–∞–∂–¥—ã–π –ø–æ–ª—É—á–∏–ª {rating_current} –æ–ø—ã—Ç–∞")
        else:
            collection.update_one({"_id": message.from_id}, {"$set": {"Dates.Date_ig_crusade.time": datetime.utcnow()}, "$inc": {"Experience": 5}})
            await message.answer(message="–í–∞—à –æ—Ç—Ä—è–¥ –ø–æ—Ç–µ—Ä–ø–µ–ª –ø–æ—Ä–∞–∂–µ–Ω–∏–µ, –±–æ–Ω—É—Å 5 –æ–ø—ã—Ç–∞")
            for i in range(len(cruiser_id["partners"])):
                collection.update_one({"_id": int(list(cruiser_id["partners"])[i])},
                                      {"$set": {"Dates.Date_ig_crusade.time": datetime.utcnow()},
                                       "$inc": {"Experience": 5}})
            cruiser.delete_one({"_id": message.from_id})
    else:
        await message.answer(message="–£ –≤–∞—Å –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–æ–≥–æ –∏–≤–µ–Ω—Ç–∞")


@bot.on.chat_message(text="–ö–∞–∫ –∏–≥—Ä–∞—Ç—å")
async def reg_handler(message: Message):
    await message.answer(
        "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ –∏–≥—Ä–æ–≤–æ–º –±–æ—Ç–µ:"
        "\n1)–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–ª–∞–Ω–µ—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π: –ü–ª–∞–Ω–µ—Ç—ã"
        "\n2)–î–∞–ª–µ–µ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –ø–ª–∞–Ω–µ—Ç—É –∫–æ–º–∞–Ω–¥–æ–π –†–æ–∂–¥–µ–Ω–∏–µ –Ω–æ–º–µ—Ä –ø–ª–∞–Ω–µ—Ç—ã(–ü—Ä–∏–º–µ—Ä: –†–æ–∂–¥–µ–Ω–∏–µ 1)"
        "\n3)–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–∞–Ω–¥–æ–π: –°—Ç–∞—Ç—É—Å"
        "\n4)–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –∫–æ–º–∞–Ω–¥—ã: –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"
        "\np.s. –û –ª—é–±—ã—Ö –±–∞–≥–∞—Ö, –Ω–µ—Å–æ—Å—Ç—ã–∫–æ–≤–æ–∫–∞—Ö –∏ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö –ø–∏—Å–∞—Ç—å https://vk.com/id570495225")


@bot.on.chat_message(text=["–ó–∞–¥–∞—á–∏", "–∑–∞–¥–∞—á–∏"])
async def info_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Essence"] in roles_imperium_ig:
        user_in_mongo = collection.find_one({"_id": message.from_id})["Dates"]
        count = 0
        for i in range(len(user_in_mongo)):
            count = count + 1
            name_dates = list(user_in_mongo)[count]
            await message.answer(
                f"{count}) {user_in_mongo[name_dates]['name']}")
    if user_in_mongo["Essence"] in roles_imperium_sm:
        user_in_mongo = collection.find_one({"_id": message.from_id})["Dates"]
        count = 0
        for i in range(len(user_in_mongo)):
            count = count + 1
            name_dates = list(user_in_mongo)[count]
            await message.answer(
                f"{count}) {user_in_mongo[name_dates]['name']}")


@bot.on.chat_message(text=("–î—É—ç–ª—å <msg>"))
async def duel_handler(message: Message, msg):
    if "[id" in msg:
        id = int(msg.split("|")[0].replace("[id", ""))
        if message.from_id != id:
            user_in_mongo = collection.find_one({"_id": message.from_id})
            user_in_mongo2 = collection.find_one({"_id": id})
            if user_in_mongo["Planet"] == "Unknown":
                await message.answer(
                    message="–û–¥–∏–Ω –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥—É—ç–ª–∏ –Ω–µ —Ä–æ–∂–¥—ë–Ω. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: !–ü–ª–∞–Ω–µ—Ç—ã, "
                            "–∞ –∑–∞—Ç–µ–º –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: !–†–æ–∂–¥–µ–Ω–∏–µ –ü–ª–∞–Ω–µ—Ç–∞")
            elif user_in_mongo2["Planet"] == "Unknown":
                await message.answer(
                    message="–û–¥–∏–Ω –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥—É—ç–ª–∏ –Ω–µ —Ä–æ–∂–¥—ë–Ω. –î–ª—è —Å–ø–∏—Å–∫–∞ –ø–ª–∞–Ω–µ—Ç –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: !–ü–ª–∞–Ω–µ—Ç—ã, "
                            "–∞ –∑–∞—Ç–µ–º –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: !–†–æ–∂–¥–µ–Ω–∏–µ –ü–ª–∞–Ω–µ—Ç–∞")
            elif user_in_mongo["Essence"] and user_in_mongo2["Essence"] in roles_imperium_ig:
                fight_logo = "–ë–æ–π –Ω–∞—á–∞–ª—Å—è\n"
                aboba = random.choices(["win_self", "win_opp"], weights=[user_in_mongo["Strength"], user_in_mongo2["Strength"]], k=1)[0]
                if aboba == "win_self":
                    rating_current = (1 / (user_in_mongo["Strength"] / (user_in_mongo["Strength"] + user_in_mongo2["Strength"]))) + 0.1
                    fight_logo = fight_logo + f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–æ—è:\n [id{message.from_id}|{user_in_mongo['Nickname']}]: {user_in_mongo['Rating']} + {rating_current}\n[id{id}|{user_in_mongo2['Nickname']}] {user_in_mongo2['Rating']} + 0"
                    collection.update_one({'_id': message.from_id}, {'$inc': {'Rating': rating_current, 'Experience': rating_current}})
                    await message.answer(message=fight_logo)
                else:
                    rating_current = (1 / (user_in_mongo2["Strength"] / (user_in_mongo2["Strength"] + user_in_mongo["Strength"]))) + 0.1
                    fight_logo = fight_logo + f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–æ—è:\n [id{id}|{user_in_mongo2['Nickname']}]: {user_in_mongo2['Rating']} + {rating_current}\n[id{message.from_id}|{user_in_mongo['Nickname']}] {user_in_mongo['Rating']} + 0"
                    collection.update_one({'_id': id}, {'$inc': {'Rating': rating_current, 'Experience': rating_current}})
                    await message.answer(message=fight_logo)
            elif user_in_mongo["Essence"] and user_in_mongo2["Essence"] in roles_imperium_sm:
                fight_logo = "–ë–æ–π –Ω–∞—á–∞–ª—Å—è\n"
                aboba = random.choices(["win_self", "win_opp"], weights=[user_in_mongo["Strength"], user_in_mongo2["Strength"]], k=1)[0]
                if aboba == "win_self":
                    rating_current = (1 / (user_in_mongo["Strength"] / (user_in_mongo["Strength"] + user_in_mongo2["Strength"]))) + 0.1
                    fight_logo = fight_logo + f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–æ—è:\n [id{message.from_id}|{user_in_mongo['Nickname']}]: {user_in_mongo['Rating']} + {rating_current}\n[id{id}|{user_in_mongo2['Nickname']}] {user_in_mongo2['Rating']} + 0"
                    collection.update_one({'_id': message.from_id}, {'$inc': {'Rating': rating_current, 'Experience': rating_current}})
                    await message.answer(message=fight_logo)
                else:
                    rating_current = (1 / (user_in_mongo2["Strength"] / (user_in_mongo2["Strength"] + user_in_mongo["Strength"]))) + 0.1
                    fight_logo = fight_logo + f"\n–†–µ–∑—É–ª—å—Ç–∞—Ç –±–æ—è:\n [id{id}|{user_in_mongo2['Nickname']}]: {user_in_mongo2['Rating']} + {rating_current}\n[id{message.from_id}|{user_in_mongo['Nickname']}] {user_in_mongo['Rating']} + 0"
                    collection.update_one({'_id': id}, {'$inc': {'Rating': rating_current, 'Experience': rating_current}})
                    await message.answer(message=fight_logo)
            else:
                await message.answer(message=f"–û–¥–∏–Ω –∏–∑ –¥—É—ç–ª—è–Ω—Ç–æ–≤ –Ω–µ –∏–º–µ–µ—Ç –Ω—É–∂–Ω–æ–π —Ä–æ–ª–∏")
        else:
            await message.answer(message="–ù–µ–ª—å–∑—è —Å—Ä–∞–∂–∞—Ç—Å—è —Å —Å–∞–º–∏ —Å–æ–±–æ–π")
    else:
        await message.answer(message="–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")


@bot.on.chat_message(text="–ö–∞–∫ –∏–≥—Ä–∞—Ç—å")
async def reg_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    await message.answer(
        f"[id{message.from_id}|{user_in_mongo['Nickname']}], –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ –≤ –∏–≥—Ä–æ–≤–æ–º –±–æ—Ç–µ:"
        "\n1)–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–ª–∞–Ω–µ—Ç—ã –∫–æ–º–∞–Ω–¥–æ–π: –ü–ª–∞–Ω–µ—Ç—ã"
        "\n2)–î–∞–ª–µ–µ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –ø–ª–∞–Ω–µ—Ç—É –∫–æ–º–∞–Ω–¥–æ–π –†–æ–∂–¥–µ–Ω–∏–µ –Ω–æ–º–µ—Ä –ø–ª–∞–Ω–µ—Ç—ã(–ü—Ä–∏–º–µ—Ä: –†–æ–∂–¥–µ–Ω–∏–µ 1)"
        "\n3)–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –∫–æ–º–∞–Ω–¥–æ–π: –°—Ç–∞—Ç—É—Å"
        "\n4)–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –∫–æ–º–∞–Ω–¥—ã: –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏"
        "\np.s. –û –ª—é–±—ã—Ö –±–∞–≥–∞—Ö, –Ω–µ—Å–æ—Å—Ç—ã–∫–æ–≤–æ–∫–∞—Ö –∏ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö –ø–∏—Å–∞—Ç—å https://vk.com/id570495225")


@bot.on.chat_message(text=["–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏", "–¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏", "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã", "–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"])
async def info_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    if user_in_mongo["Planet"] == "Unknown":
        await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤–∞–º –Ω—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω–µ—Ç—É")
    elif user_in_mongo["Essence"] in roles_imperium_ig:
        await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –¥–æ—Å—Ç—É–ø–Ω—ã–µ –í–∞–º –∫–æ–º–∞–Ω–¥—ã:\n"
                             "1)–ó–∞–¥–∞—á–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –∏–≤–µ–Ω—Ç—ã \n"
                             "2)–ü–æ–ª—É—á–∏—Ç—å –ø–æ–≤—ã—à–µ–Ω–∏–µ - –≤–ª–∏—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π –æ–ø—ã—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–µ –∑–≤–∞–Ω–∏–µ \n"
                             "3)–ü–æ—Ö–æ–¥ - –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –≤ –ø–æ—Ö–æ–¥ \n"
                             "4)–î—É—ç–ª—å @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞ –ø–æ–±–µ–¥—É –≤ –¥—É—ç–ª–∏ –≤—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ –∏ –æ–ø—ã—Ç")
    elif user_in_mongo["Essence"] in roles_imperium_sm:
        if user_in_mongo["Essence"] == "–ö–∞–Ω–¥–∏–¥–∞—Ç":
            if user_in_mongo["implants"] in implants_0_5:
                await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –¥–æ—Å—Ç—É–ø–Ω—ã–µ –í–∞–º –∫–æ–º–∞–Ω–¥—ã:\n"
                                     "1)–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ \n"
                                     "2)–•–∏–º–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n"
                                     "3)–ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è\n"
                                     "4)–ü–æ–¥—Ä–æ–±–Ω–µ–µ (–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏–∏)")
            elif user_in_mongo["implants"] in implants_6_13:
                await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –¥–æ—Å—Ç—É–ø–Ω—ã–µ –í–∞–º –∫–æ–º–∞–Ω–¥—ã:\n"
                                     "1)–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ \n"
                                     "2)–•–∏–º–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n"
                                     "3)–ì–∏–ø–Ω–æ—Ç–µ—Ä–∞–ø–∏—è\n"
                                     "4)–ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è\n"
                                     "5)–ü–æ–¥—Ä–æ–±–Ω–µ–µ (–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏–∏)")
        elif user_in_mongo["Essence"] == "–ù–µ–æ—Ñ–∏—Ç":
            await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –¥–æ—Å—Ç—É–ø–Ω—ã–µ –í–∞–º –∫–æ–º–∞–Ω–¥—ã:\n"
                                 "1)–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ \n"
                                 "2)–°—Ç–∞—Ç—å —Å–∫–∞—É—Ç–æ–º")
        elif user_in_mongo["Essence"] == "–°–∫–∞—É—Ç":
            await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –¥–æ—Å—Ç—É–ø–Ω—ã–µ –í–∞–º –∫–æ–º–∞–Ω–¥—ã:\n"
                                 "1)–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ \n"
                                 "2)–ü–æ—Å–ª–µ–¥–Ω—è—è –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è\n"
                                 "3)–ü–æ—Ö–æ–¥ - –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –≤ –ø–æ—Ö–æ–¥")
        else:
            await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –¥–æ—Å—Ç—É–ø–Ω—ã–µ –í–∞–º –∫–æ–º–∞–Ω–¥—ã:\n"
                                 "1)–ó–∞–¥–∞—á–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–º –∏–≤–µ–Ω—Ç—ã \n"
                                 "2)–ü–æ–ª—É—á–∏—Ç—å –ø–æ–≤—ã—à–µ–Ω–∏–µ - –≤–ª–∏—Ç—å –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–π –æ–ø—ã—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–µ –∑–≤–∞–Ω–∏–µ \n"
                                 "3)–ü–æ—Ö–æ–¥ - –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –≤ –ø–æ—Ö–æ–¥ \n"
                                 "4)–î—É—ç–ª—å @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∑–∞ –ø–æ–±–µ–¥—É –≤ –¥—É—ç–ª–∏ –≤—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ –∏ –æ–ø—ã—Ç")
    elif user_in_mongo["Planet"] == "–ú–∏—Ä –£–ª–µ–π":
        await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –¥–æ—Å—Ç—É–ø–Ω—ã–µ –í–∞–º –∫–æ–º–∞–Ω–¥—ã:\n"
                             "1)–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ò–ì - –≤—Å—Ç—É–ø–∏—Ç—å –≤ –ò–º–ø–µ—Ä—Å–∫—É—é –ì–≤–∞—Ä–¥–∏—é - 50 –æ–ø—ã—Ç–∞\n"
                             "2)–†–∞–±–æ—Ç–∞—Ç—å - –≤—ã–ø–æ–ª–Ω—è—Ç—å –Ω–æ—Ä–º—É —Ä–∞–±–æ—Ç—ã –Ω–∞ –≤–∞—à–µ–π –ø–ª–∞–Ω–µ—Ç–µ\n"
                             "3)–°–ø—É—Å—Ç–∏—Ç—å—Å—è - —Å–ø–∏—Å–æ–∫ –º–µ—Å—Ç –∫—É–¥–∞ –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è\n"
                             "4)–°—Ç–∞—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º - –ø–æ–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É –≤ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ –∫–æ—Å–º–æ–¥–µ—Å–∞–Ω—Ç - 50 –æ–ø—ã—Ç–∞, 50 —Å–∏–ª—ã")
    elif user_in_mongo["Planet"] == "–î–∏–∫–∏–π –ú–∏—Ä":
        await message.answer(f"[id{message.from_id}|{user_in_mongo['Nickname']}], –¥–æ—Å—Ç—É–ø–Ω—ã–µ –í–∞–º –∫–æ–º–∞–Ω–¥—ã:\n"
                             "1)–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ –ò–ì - –≤—Å—Ç—É–ø–∏—Ç—å –≤ –ò–º–ø–µ—Ä—Å–∫—É—é –ì–≤–∞—Ä–¥–∏—é - 50 –æ–ø—ã—Ç–∞\n"
                             "2)–û—Ö–æ—Ç–∞ - –¥–æ–±—ã–≤–∞—Ç—å –ø—Ä–æ–ø–∏—Ç–∞–Ω–∏–µ\n"
                             "3)–ê—Ä–µ–Ω–∞ - —Å–ø–∏—Å–æ–∫ –æ–ø–ø–æ–Ω–µ–Ω—Ç–æ–≤ –Ω–∞ –∞—Ä–µ–Ω–µ\n"
                             "4)–°—Ç–∞—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–º - –ø–æ–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É –≤ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ –∫–æ—Å–º–æ–¥–µ—Å–∞–Ω—Ç - 50 –æ–ø—ã—Ç–∞, 50 —Å–∏–ª—ã")
    else:
        await message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")


@bot.on.chat_message(text=["–ü–æ–¥—Ä–æ–±–Ω–µ–µ", "–ø–æ–¥—Ä–æ–±–Ω–µ–µ"])
async def give_handler(message: Message):
    user_in_mongo = collection.find_one({"_id": message.from_id})
    await message.answer(message=f"[id{message.from_id}|{user_in_mongo['Nickname']}], –∫–∞–∂–¥–∞—è –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è —Å—Ç–æ–∏—Ç 50 –æ–ø—ã—Ç–∞. –î–ª—è —É—Å–ø–µ—à–Ω–æ–π –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª-–≤–æ —Å–∏–ª—ã. –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –Ω–∞—á–∞–ª–∏ –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—é, –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É–≤ –Ω—É–∂–Ω–æ–≥–æ –∫–æ–ª-–≤–∞ —Å–∏–ª—ã –∏ –æ–Ω–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –≤–∞—à–∞ —Å–∏–ª–∞ –∏ –æ–ø—ã—Ç —É–º–µ–Ω—å—à–∞—Ç—å—Å—è –≤ 2 —Ä–∞–∑–∞"
                                 f"\n1)–ü–µ—Ä–≤–∞—è –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è - 100% —É—Å–ø–µ—Ö –ø—Ä–∏ 60 —Å–∏–ª—ã"
                                 f"\n2)–í—Ç–æ—Ä–∞—è –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è - 100% —É—Å–ø–µ—Ö –ø—Ä–∏ 70 —Å–∏–ª—ã"
                                 f"\n3)–¢—Ä–µ—Ç—å—è –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è - 100% —É—Å–ø–µ—Ö –ø—Ä–∏ 80 —Å–∏–ª—ã"
                                 f"\n4)–ß–µ—Ç–≤–µ—Ä—Ç–∞—è –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è - 100% —É—Å–ø–µ—Ö –ø—Ä–∏ 90 —Å–∏–ª—ã"
                                 f"\n5)–ü—è—Ç–∞—è –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è - 100% —É—Å–ø–µ—Ö –ø—Ä–∏ 100 —Å–∏–ª—ã"
                                 f"\n6)–®–µ—Å—Ç–∞—è –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è - 100% —É—Å–ø–µ—Ö –ø—Ä–∏ 120 —Å–∏–ª—ã"
                                 f"\n7)–°–µ–¥—å–º–∞—è –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è - 100% —É—Å–ø–µ—Ö –ø—Ä–∏ 150 —Å–∏–ª—ã")


@bot.on.chat_message(text=("–í—ã–¥–∞—Ç—å <msg> <msg2>"))
async def give_handler(message: Message, msg, msg2):
    if message.from_id == 570495225:
        id = msg.split("|")[0].replace("[id", "")
        a = int(msg2)
        collection.update_one({'_id': int(id)}, {'$inc': {'Experience': int(a)}})
        await message.answer(message=f"True {msg}, {msg2}")


@bot.on.chat_message(text=("–°–Ω–∏–∑–∏—Ç—å <msg> <msg2>"))
async def give_handler(message: Message, msg, msg2):
    if message.from_id == 570495225:
        id = msg.split("|")[0].replace("[id", "")
        a = int(msg2)
        collection.update_one({'_id': int(id)}, {'$inc': {'Experience': -int(a)}})
        await message.answer(message=f"True {msg}, {msg2}")


@bot.on.chat_message()
async def exp_handler(message: Message):
    collection.update_one({'_id': message.from_id}, {'$inc': {'Experience': 0.3}})


bot.run_forever()